#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# alias ls='ls --color=auto --classify --group-directories-first'
alias ls='ls --color=auto --group-directories-first'
PS1='[\u@\h \W]\$ '
PS1='${\u:\h}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '


export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:$HOME/sdks/flutter/bin

# set XDG directories and editor variables
export $(envsubst < $HOME/dotfiles/dot_env)

alias tmux='tmux -2'

alias k9s='docker run --rm -it -v $KUBECONFIG:/root/.kube/config quay.io/derailed/k9s'

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="$HOME/.pyenv/shims:${PATH}"

export PYENV_SHELL=bash
command pyenv rehash 2>/dev/null
pyenv() {
  local command
  command="${1:-}"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  rehash|shell)
    eval "$(pyenv "sh-$command" "$@")"
    ;;
  *)
    command pyenv "$command" "$@"
    ;;
  esac
}


# BEGIN_KITTY_SHELL_INTEGRATION
if test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; fi
# END_KITTY_SHELL_INTEGRATION

export SOPS_AGE_KEY_FILE=~/.config/sops/age/keys.txt

alias k=kubectl
complete -o default -F __start_kubectl k
export KUBECONFIG=$(find ~/.kube -type f -o -path ~/.kube/cache -prune -a -type f | head -n 1)

if [ ! -f ~/.local/share/git-completion/git-completion.bash ]; then
    mkdir -p ~/.local/share/git-completion/
    echo "Downloading missing git-completion."
    curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.local/share/git-completion/git-completion.bash
fi
source ~/.local/share/git-completion/git-completion.bash

eval $(ssh-agent -s) > /dev/null
eval "$(direnv hook bash)"

export PATH=$PATH:$HOME/.cargo/bin
eval "$(zoxide init bash)"
eval "$(starship init bash)"

if [ -f ~/dotfiles/scripts/scripts_paths ]; then
    OLD_PATH=$PATH
    source ~/dotfiles/scripts/scripts_paths

    if (( ${#PATH} < ${#OLD_PATH} )); then
        echo "Something went wrong with the scripts_paths file. Reverting to Path before that"
        export PATH=$OLD_PATH
    fi
fi

function gitignore(){
    gitignoreurl="https://www.toptal.com/developers/gitignore/api";
    selection=$(curl -sL "$gitignoreurl/list" | sed 's/,/\n/g' | fzf --multi --preview 'cat {+f}' --bind 'tab:toggle+clear-query' | tr '\n' ',' | sed 's/,$//g');
    curl -sL "$gitignoreurl/$selection" >> .gitignore;
}

function switchkube(){
    export KUBECONFIG=$(find ~/.kube -type f -o -path ~/.kube/cache -prune -a -type f | fzf)
}
